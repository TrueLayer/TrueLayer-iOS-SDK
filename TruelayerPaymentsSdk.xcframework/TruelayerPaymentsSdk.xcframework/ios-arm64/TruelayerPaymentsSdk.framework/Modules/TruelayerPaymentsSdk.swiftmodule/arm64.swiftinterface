// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name TruelayerPaymentsSdk
import Combine
import Foundation
import Swift
import SwiftUI
import UIKit
import WebKit
import _Concurrency
@_inheritsConvenienceInitializers @objc public class TruelayerPaymentsSdkResources : ObjectiveC.NSObject {
  @objc public class var bundle: Foundation.Bundle {
    @objc get
  }
  @objc override dynamic public init()
  @objc deinit
}
extension TruelayerPaymentsSdk.TruelayerPayments {
  public enum Environment {
    case production
    case sandbox
    public static func == (a: TruelayerPaymentsSdk.TruelayerPayments.Environment, b: TruelayerPaymentsSdk.TruelayerPayments.Environment) -> Swift.Bool
    public func hash(into hasher: inout Swift.Hasher)
    public var hashValue: Swift.Int {
      get
    }
  }
}
extension TruelayerPaymentsSdk.TruelayerPayments.Models {
  public struct PaymentContext : Swift.Equatable {
    public let paymentId: Swift.String
    public let paymentToken: Swift.String
    public let redirectUri: Swift.String
    public init(paymentId: Swift.String, token: Swift.String, clientId: Swift.String, redirectUri: Swift.String, presentationStyle: TruelayerPaymentsSdk.TruelayerPayments.Models.PresentationStyle)
    public static func == (a: TruelayerPaymentsSdk.TruelayerPayments.Models.PaymentContext, b: TruelayerPaymentsSdk.TruelayerPayments.Models.PaymentContext) -> Swift.Bool
  }
}
extension TruelayerPaymentsSdk.TruelayerPayments.Models {
  public enum PaymentProcessingStep : Swift.Equatable {
    case providerSelected(provider: TruelayerPaymentsSdk.TruelayerPayments.Models.Provider, paymentContext: TruelayerPaymentsSdk.TruelayerPayments.Models.PaymentContext)
    case paymentCompleted
    case authorized
    case redirectedToBank(provider: TruelayerPaymentsSdk.TruelayerPayments.Models.Provider, paymentContext: TruelayerPaymentsSdk.TruelayerPayments.Models.PaymentContext, redirectURI: Foundation.URL)
    public static func == (a: TruelayerPaymentsSdk.TruelayerPayments.Models.PaymentProcessingStep, b: TruelayerPaymentsSdk.TruelayerPayments.Models.PaymentProcessingStep) -> Swift.Bool
  }
}
extension TruelayerPaymentsSdk.TruelayerPayments.Models {
  public enum PresentationStyle : Swift.Equatable {
    case present(on: UIKit.UIViewController, modalPresentationStyle: UIKit.UIModalPresentationStyle = .automatic)
    case push(on: UIKit.UINavigationController)
    public static func == (a: TruelayerPaymentsSdk.TruelayerPayments.Models.PresentationStyle, b: TruelayerPaymentsSdk.TruelayerPayments.Models.PresentationStyle) -> Swift.Bool
  }
}
extension TruelayerPaymentsSdk.TruelayerPayments.Models {
  public struct Provider : Swift.Equatable {
    public let id: Swift.String
    public let name: Swift.String
    public let logo: Swift.String
    public let icon: Swift.String
    public static func == (a: TruelayerPaymentsSdk.TruelayerPayments.Models.Provider, b: TruelayerPaymentsSdk.TruelayerPayments.Models.Provider) -> Swift.Bool
  }
}
extension TruelayerPaymentsSdk.TruelayerPayments {
  public enum Error : Swift.Error, Swift.Equatable {
    case failedToStartSDK
    case sdkAlreadyStarted
    case sdkNotStartedYet
    case unknown
    case userAborted
    case noInterned
    case communicationIssue
    case authorizationFailed
    case paymentFailed
    public func hash(into hasher: inout Swift.Hasher)
    public static func == (a: TruelayerPaymentsSdk.TruelayerPayments.Error, b: TruelayerPaymentsSdk.TruelayerPayments.Error) -> Swift.Bool
    public var hashValue: Swift.Int {
      get
    }
  }
}
public struct UIStyle : Swift.Equatable {
  public init(primary: UIKit.UIColor = .systemBlue, primaryActionLabel: UIKit.UIColor = .white, primaryForeground: UIKit.UIColor = .label, secondaryForeground: UIKit.UIColor = .systemGray, primaryBackground: UIKit.UIColor = .systemBackground, secondaryBackground: UIKit.UIColor = .secondarySystemBackground, divider: UIKit.UIColor = .separator, border: UIKit.UIColor = .separator, errorColor: UIKit.UIColor = .systemRed, alertBackgroundColor: UIKit.UIColor? = nil, searchPrimaryColor: UIKit.UIColor = .label, searchSecondaryColor: UIKit.UIColor = .systemGray, searchCursorTint: UIKit.UIColor = .systemBlue, searchBackground: UIKit.UIColor = .secondarySystemBackground, searchClearTint: UIKit.UIColor = .systemGray, textPlaceholderColor: UIKit.UIColor = .placeholderText)
  public static func == (a: TruelayerPaymentsSdk.UIStyle, b: TruelayerPaymentsSdk.UIStyle) -> Swift.Bool
}
public protocol TruelayerPaymentsManager {
  func start(environment: TruelayerPaymentsSdk.TruelayerPayments.Environment, style: TruelayerPaymentsSdk.UIStyle) throws
  func processPayments(context: TruelayerPaymentsSdk.TruelayerPayments.Models.PaymentContext, callback: TruelayerPaymentsSdk.TruelayerPayments.SDKCallback?) throws
}
extension TruelayerPaymentsSdk.TruelayerPayments {
  public typealias SDKCallback = (_ result: Swift.Result<TruelayerPaymentsSdk.TruelayerPayments.Models.PaymentProcessingStep, TruelayerPaymentsSdk.TruelayerPayments.Error>) -> Swift.Void
  @_hasMissingDesignatedInitializers public class Manager : TruelayerPaymentsSdk.TruelayerPaymentsManager {
    public static let shared: TruelayerPaymentsSdk.TruelayerPayments.Manager
    public func start(environment: TruelayerPaymentsSdk.TruelayerPayments.Environment, style: TruelayerPaymentsSdk.UIStyle = UIStyle()) throws
    public func processPayments(context: TruelayerPaymentsSdk.TruelayerPayments.Models.PaymentContext, callback: TruelayerPaymentsSdk.TruelayerPayments.SDKCallback? = nil) throws
    @objc deinit
  }
}
public enum TruelayerPayments {
}
extension TruelayerPaymentsSdk.TruelayerPayments {
  public enum Models {
  }
}
extension UIKit.UIColor {
  convenience public init(lightAppearance: UIKit.UIColor, darkAppearance: UIKit.UIColor)
}
extension TruelayerPaymentsSdk.TruelayerPayments.Environment : Swift.Equatable {}
extension TruelayerPaymentsSdk.TruelayerPayments.Environment : Swift.Hashable {}
extension TruelayerPaymentsSdk.TruelayerPayments.Error : Swift.Hashable {}
