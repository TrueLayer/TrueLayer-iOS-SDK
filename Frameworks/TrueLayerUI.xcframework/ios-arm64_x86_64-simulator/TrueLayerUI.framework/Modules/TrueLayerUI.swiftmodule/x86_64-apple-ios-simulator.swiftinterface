// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target x86_64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name TrueLayerUI
// swift-module-flags-ignorable: -enable-bare-slash-regex
import CoreGraphics
import DeveloperToolsSupport
import Foundation
import Swift
import SwiftUI
import TrueLayerAPI
import TrueLayerCore
import TrueLayerLogger
import TrueLayerNetwork
import TrueLayerUtils
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc public class TrueLayerUIResources : ObjectiveC.NSObject {
  @objc public class var bundle: Foundation.Bundle {
    @objc get
  }
  @objc override dynamic public init()
  @objc deinit
}
extension TrueLayerUI.Analytics {
  public enum Environment {
    case development
    case sandbox
    case production
    public static func == (a: TrueLayerUI.Analytics.Environment, b: TrueLayerUI.Analytics.Environment) -> Swift.Bool
    public func hash(into hasher: inout Swift.Hasher)
    public var hashValue: Swift.Int {
      get
    }
  }
}
extension TrueLayerUI.Analytics {
  public enum IntegrationType : Swift.Equatable {
    case objC
    case reactNative(version: Swift.String)
    case undefined
    public static func == (a: TrueLayerUI.Analytics.IntegrationType, b: TrueLayerUI.Analytics.IntegrationType) -> Swift.Bool
  }
}
extension TrueLayerUI.Analytics {
  @_hasMissingDesignatedInitializers public class Manager {
    convenience public init(in environment: TrueLayerUI.Analytics.Environment, resourceToken: Swift.String, sdkVersion: Swift.String, integrationType: TrueLayerUI.Analytics.IntegrationType)
    @objc deinit
  }
}
public enum Analytics {
}
@dynamicMemberLookup public protocol SomeViewModel {
}
extension TrueLayerUI.Analytics.Environment : Swift.Equatable {}
extension TrueLayerUI.Analytics.Environment : Swift.Hashable {}
