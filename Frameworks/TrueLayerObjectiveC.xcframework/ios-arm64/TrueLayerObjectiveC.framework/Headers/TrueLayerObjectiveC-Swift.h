#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef TRUELAYEROBJECTIVEC_SWIFT_H
#define TRUELAYEROBJECTIVEC_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="TrueLayerObjectiveC",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
/// The environment to use when using the TrueLayer SDK.
typedef SWIFT_ENUM(NSInteger, TrueLayerEnvironment, open) {
/// The sandbox environment.
  TrueLayerEnvironmentSandbox = 0,
/// The production environment.
  TrueLayerEnvironmentProduction = 1,
};

@class NSString;
@class NSURL;
@class TrueLayerMandatePreferences;

SWIFT_CLASS("_TtC19TrueLayerObjectiveC23TrueLayerMandateContext")
@interface TrueLayerMandateContext : NSObject
/// The unique identifier of the payment.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// The security token associated with the payment.
@property (nonatomic, readonly, copy) NSString * _Nonnull token;
/// The destination where the user should be redirected once the authorization flow is done outside of the app (bank website, HPP).
@property (nonatomic, readonly, copy) NSURL * _Nonnull redirectURL;
/// The optional preferences to apply to the payment.
@property (nonatomic, readonly, strong) TrueLayerMandatePreferences * _Nonnull preferences;
/// Creates and returns an instance of <code>Context</code>.
/// \param identifier The unique identifier of the payment.
///
/// \param token The security token associated with the payment.
///
/// \param redirectURL The destination where the user should be redirected once the authorization flow is done outside of the app.
///
/// \param preferences The preferences to apply to the payment.
///
- (nonnull instancetype)initWithIdentifier:(NSString * _Nonnull)identifier token:(NSString * _Nonnull)token redirectURL:(NSURL * _Nonnull)redirectURL preferences:(TrueLayerMandatePreferences * _Nonnull)preferences OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// The list of possible errors that can happen inside of <code>TrueLayer</code>’s SDK when processing a mandate.
typedef SWIFT_ENUM(NSInteger, TrueLayerMandateError, open) {
/// The authorization process failed on the user <-> bank side.
  TrueLayerMandateErrorAuthorizationFailed = 0,
/// There was an issue while connecting to the internet.
/// Either the user is offline, or the request timed out.
  TrueLayerMandateErrorConnectionIssues = 1,
/// A unexpected error, the error will be passed as a <code>String</code> parameter.
  TrueLayerMandateErrorGeneric = 2,
/// The token used to make the mandate is not authorized to undergo such operation.
  TrueLayerMandateErrorInvalidToken = 3,
/// The mandate expired.
  TrueLayerMandateErrorMandateExpired = 4,
/// The requested mandate was not found.
/// This is probably due to it not being created on the backend side.
  TrueLayerMandateErrorMandateNotFound = 5,
/// The mandate was rejected by the bank.
  TrueLayerMandateErrorMandateRejected = 6,
/// The mandate has been revoked and is no longer valid.
  TrueLayerMandateErrorRevoked = 7,
/// The SDK <code>configure</code> method has not been called before using it.
  TrueLayerMandateErrorSdkNotConfigured = 8,
/// The server encountered an error while processing the answer.
  TrueLayerMandateErrorServerError = 9,
/// The SDK encountered an unexpected behaviour.
/// This error should never occur.
  TrueLayerMandateErrorUnexpectedBehavior = 10,
/// The user canceled the mandate.
  TrueLayerMandateErrorUserCanceled = 11,
};
static NSString * _Nonnull const TrueLayerMandateErrorDomain = @"TrueLayerObjectiveC.TrueLayerMandateError";

@class TrueLayerPresentationStyle;

/// A set of preferences that can be applied to a mandate.
SWIFT_CLASS("_TtC19TrueLayerObjectiveC27TrueLayerMandatePreferences")
@interface TrueLayerMandatePreferences : NSObject
/// Creates a new instance of Preferences. All values default to <code>nil</code>.
/// \param presentationStyle The presentation style of the SDK.
///
- (nonnull instancetype)initWithPresentationStyle:(TrueLayerPresentationStyle * _Nonnull)presentationStyle OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// The different final states in which a mandate can be when successful.
typedef SWIFT_ENUM(NSInteger, TrueLayerMandateState, open) {
/// The user authorized the mandate with the bank.
  TrueLayerMandateStateAuthorized = 0,
/// Then user has been redirected to the bank to authorize the mandate.
/// We do not know what happens from there on since we do not have any control over it.
  TrueLayerMandateStateRedirect = 1,
};

typedef SWIFT_ENUM(NSInteger, TrueLayerMandateStatus, open) {
/// The mandate requires authorization.
/// Pass the same context to the <code>processMandate(context:then:)</code> method.
  TrueLayerMandateStatusAuthorizationRequired = 0,
/// The user is authorizing the mandate.
/// If still in this state after the <code>SDK</code> dismissed means the user has additional actions to take outside of the application.
  TrueLayerMandateStatusAuthorizing = 1,
/// The mandate has been authorized by the bank.
/// This is a final stage status.
  TrueLayerMandateStatusAuthorized = 2,
/// The mandate has been revoked and is no longer valid.
/// This is a final stage status.
  TrueLayerMandateStatusRevoked = 3,
/// The mandate failed. This can be due to various reasons.
/// This is a final stage status.
  TrueLayerMandateStatusFailed = 4,
};

@class TrueLayerSinglePaymentContext;
enum TrueLayerSinglePaymentState : NSInteger;
enum TrueLayerSinglePaymentError : NSInteger;
enum TrueLayerSinglePaymentStatus : NSInteger;

SWIFT_CLASS("_TtC19TrueLayerObjectiveC24TrueLayerPaymentsManager")
@interface TrueLayerPaymentsManager : NSObject
+ (void)configureWithEnvironment:(enum TrueLayerEnvironment)environment additionalConfiguration:(NSDictionary<NSString *, NSString *> * _Nonnull)additionalConfiguration;
/// It presents the SDK in the app to carry out a payment.
/// This method can be called multiple times to process different payments.
/// Before using this method, make sure that the SDK has been started, otherwise it will raise an error.
/// note:
/// this method is thread-safe.
/// \param context an object that contains all the information required for the payment and to customise how the SDK behaves.
///
/// \param success a completion handler to execute in case of success.
///
/// \param failure a completion handler to execute in case of failure.
///
+ (void)processSinglePaymentWithContext:(TrueLayerSinglePaymentContext * _Nonnull)context success:(void (^ _Nonnull)(enum TrueLayerSinglePaymentState))success failure:(void (^ _Nonnull)(enum TrueLayerSinglePaymentError))failure;
/// Fetches the status of a single payment given its identifier and security token.
/// \param paymentIdentifier The unique identifier of the payment.
///
/// \param resourceToken The security token associated with the payment.
///
///
/// throws:
///
/// <ul>
///   <li>
///     <code>TrueLayerSinglePaymentErrorSdkNotConfigured</code> if the configure method was never called before.
///   </li>
///   <li>
///     <code>TrueLayerSinglePaymentErrorInvalidToken</code>
///   </li>
///   <li>
///     <code>TrueLayerSinglePaymentErrorPaymentNotFound</code>
///   </li>
///   <li>
///     <code>TrueLayerSinglePaymentErrorServerError</code>
///   </li>
/// </ul>
///
/// returns:
/// An instance of <code>TrueLayerSinglePaymentStatus</code>.
+ (void)singlePaymentStatusWithPaymentIdentifier:(NSString * _Nonnull)paymentIdentifier resourceToken:(NSString * _Nonnull)resourceToken success:(void (^ _Nonnull)(enum TrueLayerSinglePaymentStatus))success failure:(void (^ _Nonnull)(enum TrueLayerSinglePaymentError))failure;
/// It presents the SDK in the app to carry out a mandate.
/// This method can be called multiple times to process different mandates.
/// Before using this method, make sure that the SDK has been started, otherwise it will raise an error.
/// note:
/// this method is thread-safe.
/// \param context an object that contains all the information required for the payment and to customise how the SDK behaves.
///
/// \param success a completion handler to execute in case of success.
///
/// \param failure a completion handler to execute in case of failure.
///
+ (void)processMandateWithContext:(TrueLayerMandateContext * _Nonnull)context success:(void (^ _Nonnull)(enum TrueLayerMandateState))success failure:(void (^ _Nonnull)(enum TrueLayerMandateError))failure;
/// Fetches the status of a mandate given its identifier and security token.
/// \param paymentIdentifier The unique identifier of the payment.
///
/// \param resourceToken The security token associated with the payment.
///
///
/// throws:
///
/// <ul>
///   <li>
///     <code>TrueLayerSinglePaymentErrorSdkNotConfigured</code> if the configure method was never called before.
///   </li>
///   <li>
///     <code>TrueLayerSinglePaymentErrorInvalidToken</code>
///   </li>
///   <li>
///     <code>TrueLayerSinglePaymentErrorPaymentNotFound</code>
///   </li>
///   <li>
///     <code>TrueLayerSinglePaymentErrorServerError</code>
///   </li>
/// </ul>
///
/// returns:
/// An instance of <code>TrueLayer.Payments.Models.Payment.Status</code>.
+ (void)mandateStatusWithPaymentIdentifier:(NSString * _Nonnull)paymentIdentifier resourceToken:(NSString * _Nonnull)resourceToken success:(void (^ _Nonnull)(enum TrueLayerMandateStatus))success failure:(void (^ _Nonnull)(enum TrueLayerMandateError))failure;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class UIViewController;

SWIFT_CLASS("_TtC19TrueLayerObjectiveC26TrueLayerPresentationStyle")
@interface TrueLayerPresentationStyle : NSObject
- (nonnull instancetype)initWithPresentOn:(UIViewController * _Nonnull)viewController style:(UIModalPresentationStyle)style OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class TrueLayerSinglePaymentsPreferences;

SWIFT_CLASS("_TtC19TrueLayerObjectiveC29TrueLayerSinglePaymentContext")
@interface TrueLayerSinglePaymentContext : NSObject
/// The unique identifier of the payment.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// The security token associated with the payment.
@property (nonatomic, readonly, copy) NSString * _Nonnull token;
/// The destination where the user should be redirected once the authorization flow is done outside of the app (bank website, HPP).
@property (nonatomic, readonly, copy) NSURL * _Nonnull redirectURL;
/// The optional preferences to apply to the payment.
@property (nonatomic, readonly, strong) TrueLayerSinglePaymentsPreferences * _Nonnull preferences;
/// Creates and returns an instance of <code>Context</code>.
/// \param identifier The unique identifier of the payment.
///
/// \param token The security token associated with the payment.
///
/// \param redirectURL The destination where the user should be redirected once the authorization flow is done outside of the app.
///
/// \param preferences The preferences to apply to the payment.
///
- (nonnull instancetype)initWithIdentifier:(NSString * _Nonnull)identifier token:(NSString * _Nonnull)token redirectURL:(NSURL * _Nonnull)redirectURL preferences:(TrueLayerSinglePaymentsPreferences * _Nonnull)preferences OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// The different errors which can occur while processing a single payment.
typedef SWIFT_ENUM(NSInteger, TrueLayerSinglePaymentError, open) {
/// The authorization process failed on the user <-> bank side.
  TrueLayerSinglePaymentErrorAuthorizationFailed = 0,
/// There was an issue while connecting to the internet.
/// Either the user is offline, or the request timed out.
  TrueLayerSinglePaymentErrorConnectionIssues = 1,
/// A unexpected error, the error will be passed as a <code>String</code> parameter.
  TrueLayerSinglePaymentErrorGeneric = 2,
/// The token used to make the payment is not authorized to undergo such operation.
  TrueLayerSinglePaymentErrorInvalidToken = 3,
/// The user took too long to complete the payment, and therefore it expired.
  TrueLayerSinglePaymentErrorPaymentExpired = 4,
/// The requested payment was not found.
/// This is probably due to it not being created on the backend side.
  TrueLayerSinglePaymentErrorPaymentNotFound = 5,
/// The payment was rejected by the bank.
  TrueLayerSinglePaymentErrorPaymentRejected = 6,
/// The <code>SDK</code> <code>configure</code> method has not been called before using it.
  TrueLayerSinglePaymentErrorSdkNotConfigured = 7,
/// The server encountered an error while processing the answer.
  TrueLayerSinglePaymentErrorServerError = 8,
/// The <code>SDK</code> encountered an unexpected behavior.
/// This error should never occur.
  TrueLayerSinglePaymentErrorUnexpectedBehavior = 9,
/// The user canceled the payment.
  TrueLayerSinglePaymentErrorUserCanceled = 10,
};
static NSString * _Nonnull const TrueLayerSinglePaymentErrorDomain = @"TrueLayerObjectiveC.TrueLayerSinglePaymentError";

/// The different final states in which a payment can be when successful.
typedef SWIFT_ENUM(NSInteger, TrueLayerSinglePaymentState, open) {
/// The user authorized the payment with the bank.
  TrueLayerSinglePaymentStateAuthorized = 0,
/// The bank confirmed the payment.
  TrueLayerSinglePaymentStateExecuted = 1,
/// Then user has been redirected to the bank to authorize the payment.
/// We do not know what happens from there on since we do not have any control over it.
  TrueLayerSinglePaymentStateRedirect = 2,
/// The funds have reached the destination.
  TrueLayerSinglePaymentStateSettled = 3,
/// The user did everything needed to do, but the merchant has to wait for the output.
  TrueLayerSinglePaymentStateWait = 4,
};

typedef SWIFT_ENUM(NSInteger, TrueLayerSinglePaymentStatus, open) {
/// The payment requires authorisation.
/// Pass the same context to the <code>processPayment(context:then:)</code> method.
  TrueLayerSinglePaymentStatusAuthorizationRequired = 0,
/// The user is authorizing the payment.
/// If still in this state after the <code>SDK</code> dismissed means the user has additional actions to take outside of the application.
  TrueLayerSinglePaymentStatusAuthorizing = 1,
/// The payment has been authorized by the bank.
/// This is a final stage status.
  TrueLayerSinglePaymentStatusAuthorized = 2,
/// The payment has been executed.
/// This is a final stage status.
  TrueLayerSinglePaymentStatusExecuted = 3,
/// The funds reached their final destination.
/// This is a final stage status.
  TrueLayerSinglePaymentStatusSettled = 4,
/// The payment failed. This can be due to various reasons.
/// This is a final stage status.
  TrueLayerSinglePaymentStatusFailed = 5,
};


/// A set of preferences that can be applied to a single payment.
SWIFT_CLASS("_TtC19TrueLayerObjectiveC34TrueLayerSinglePaymentsPreferences")
@interface TrueLayerSinglePaymentsPreferences : NSObject
/// Creates a new instance of Preferences. All values default to <code>nil</code>.
/// \param presentationStyle The presentation style of the SDK.
///
/// \param preferredCountryCode The preferred country to use when displaying the providers.
///
- (nonnull instancetype)initWithPresentationStyle:(TrueLayerPresentationStyle * _Nonnull)presentationStyle preferredCountryCode:(NSString * _Nullable)preferredCountryCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
